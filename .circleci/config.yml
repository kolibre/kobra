version: 2.1

commands:
  run-testcase:
    parameters:
      test-case:
        type: string
        default: case.frank
    steps:
      - checkout
      - run:
          name: Install frank testing tool
          command: |
            sudo curl -L git.io/frank -o /usr/local/bin/frank
            sudo chmod 755 /usr/local/bin/frank
      - run:
          name: Waiting for Kobra to be ready
          command: |
            for i in $(seq 1 10);
            do
              nc -z kobra 3000 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Kobra && exit 1
      - run:
          name: Change url in test case
          command: sed -i 's;http://127.0.0.1:3000;http://kobra:3000;' << parameters.test-case >>
      - run:
          name: Run test case
          command: frank -c << parameters.test-case >>

executors:
  frank:
    docker:
      - image: circleci/buildpack-deps:bionic-curl
      - image: postgres:11
        name: postgres
        environment:
          POSTGRES_PASSWORD: password
      - image: kolibre/kobra:${CIRCLE_SHA}
        name: kobra
        environment:
          SECRET_KEY: citesting
          STORAGE_PATH: /tmp
          DATABASE_URL: postgres://postgres:password@postgres:5432/kobra
          WAIT_FOR: tcp://postgres:5432

jobs:
  test-migrations-postgres:
    docker:
      - image: ruby:2.5.7
        environment:
          BUNDLER_VERSION: 2.0.2
          DATABASE_URL: postgres://postgres:password@postgres:5432/kobra
      - image: postgres:11
        name: postgres
        environment:
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - run:
          name: Install bundler
          command: gem install bundler
      - run:
          name: Install Ruby dependencies
          command: bundle install
      - run:
          name: Set up DB
          command: bundle exec rake db:create
      - run:
          name: Apply migrations
          command: bundle exec rake db:migrate
  test-migrations-mysql:
    docker:
      - image: ruby:2.5.7
        environment:
          BUNDLER_VERSION: 2.0.2
          DATABASE_URL: mysql2://root:password@mysql:3306/kobra?pool=5
      - image: mysql:8.0
        name: mysql
        command: --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: kobra
    steps:
      - checkout
      - run:
          name: Install bundler
          command: gem install bundler
      - run:
          name: Install Ruby dependencies
          command: bundle install
      - run:
          name: Set up DB
          command: bundle exec rake db:create
      - run:
          name: Apply migrations
          command: bundle exec rake db:migrate
  build-kobra-docker-image:
    docker:
      - image: circleci/buildpack-deps:bionic-curl
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.06.0-ce
      - run:
          name: Build docker image
          command: docker build -t kolibre/kobra:${CIRCLE_SHA} .
  test-case-constants:
    executor:
      name: frank
    steps:
      - run-testcase:
          test-case: ./testcases/01_constants.frank
  test-case-user-managenent:
    executor:
      name: frank
    steps:
      - run-testcase:
          test-case: ./testcases/02_user_management.frank
  test-case-content-management:
    executor:
      name: frank
    steps:
      - run-testcase:
          test-case: ./testcases/03_content_management.frank
  test-case-bookshelf-management:
    executor:
      name: frank
    steps:
      - run-testcase:
          test-case: ./testcases/04_bookshelf_management.frank
  push-kobra-docker-image:
    docker:
      - image: circleci/buildpack-deps:bionic-curl
    steps:
      - setup_remote_docker:
          version: 18.06.0-ce
      - run:
          name: Retag image
          command: docker tag kolibre/kobra:${CIRCLE_SHA} kolibre/kobra:latest
      - run:
          name: Push image to dockerhub
          command: echo "docker push kolibre/kobra:latest" # TODO: integrate with dockerhub

workflows:
  version: 2.1
  build-test-and-push:
    jobs:
      - test-migrations-postgres
      - test-migrations-mysql
      - build-kobra-docker-image:
          requires:
            - test-migrations-postgres
            - test-migrations-mysql
      - test-case-constants:
          requires:
            - build-kobra-docker-image
      - test-case-user-managenent:
          requires:
            - build-kobra-docker-image
      - test-case-content-management:
          requires:
            - build-kobra-docker-image
      - test-case-bookshelf-management:
          requires:
            - build-kobra-docker-image
      - push-kobra-docker-image:
          requires:
            - test-case-constants
            - test-case-user-managenent
            - test-case-content-management
            - test-case-bookshelf-management